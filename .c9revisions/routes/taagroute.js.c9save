{"ts":1370898367111,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var Issue = require('../models/issue.js');\nvar Media = require('../models/media.js');\nvar Taag = require('../models/taag.js');\nvar mongo = require('mongoose');\nmodule.exports = TaagRoute;\n\nfunction TaagRoute(connection){\n\tmongo.connect(connection);\n}\n\nTaagRoute.prototype = {\n\tshowTaags: function(req, res){\n    \tTaag.find({},function(err,theReturnedTaags){\n        if(err){\n          res.writeHead(500,err.message);\n          res.end();\n        }else{\n          res.render('showTaags',{title:'Taag Listing',theTaags:theReturnedTaags});\n        }\n      });\n\t},\n\n\tshowTaag: function(req, res){\n    Taag.findOne({code:req.params.code.toLowerCase()},function(err, item) \n    {\n      if(item){\n        var videoItems = item.medias.filter(function(element,index,array){\n          console.log(array);\n          return (element.type == 'Video');\n        });\n        console.log(videoItems);\n        var linkItems = item.medias.filter(function(element,index,array){\n          return(element.type =='Link');\n        });\n\n        for (var i = videoItems.length - 1; i >= 0; i--) {\n          var urlLib = require('url');\n          var stringAsUrl = urlLib.parse(videoItems[i].url,true);\n          var urlQuery = stringAsUrl.query;\n          console.log(urlQuery);\n          var videoId = urlQuery.v;\n          videoItems[i].videoId = videoId;\n        };\n        res.render('showTaag',{title: item.title , taag: item,videos:videoItems,links:linkItems});\n      }else{\n        res.redirect('/')\n      }\n    });\n\n  },\n\n\tsaveTaag: function(req, res){\n    var isNew = false;\n    var theId;\n    if(req.body.taag.id == '' || req.body.taag.id == 'undefined' || req.body.taag.id == null){\n      isNew = true;theId = null;\n    }else{\n      theId = req.body.taag.id;\n    }\n    Taag.findOne({code:req.body.taag.code.toLowerCase()},function(err, item) \n    {\n      if (item != null && isNew){\n        res.writeHead(200, { 'Content-Type': 'application/json' });\n        res.write(JSON.stringify({ isSuccessful:false, code:req.body.taag.code, message:\"The the code \" + req.body.taag.code + \" is already in use. Please use another.\" }));\n        res.end();\n        return;\n      }\n      var newTaag = new Taag(req.body.taag);\n      var idObject = require('mongoose').Types.ObjectId;\n      Taag.findById(new idObject(theId),\n      function(err,foundTaag){\n        if(err){\n            res.writeHead(200, { 'Content-Type': 'application/json' });\n            res.write(JSON.stringify({isSuccessful:false,message:err.message}));\n            res.end();\n            return;\n        }else{\n            if(foundTaag){\n                Taag.update({_id:new idObject(theId)},\n                      newTaag,\n                      function(err,updatedTaag){\n                        res.writeHead(200, { 'Content-Type': 'application/json' });\n                        res.write(JSON.stringify({isSuccessful:true,code:updatedTaag.code}));\n                        res.end();\n                        return;\n                      });\n            }else{\n                newTaag.save(\n                  function(err,createdTaag){\n                    if (err){\n                      res.writeHead(200, { 'Content-Type': 'application/json' });\n                      res.write(JSON.stringify({isSuccessful:false,message:err.message}));\n                      res.end();\n                      return;\n                    }\n                    res.writeHead(200, { 'Content-Type': 'application/json' });\n                    res.write(JSON.stringify({isSuccessful:true,code:createdTaag.code}));\n                    res.end();\n                    return;\n                });\n            }\n        }\n      });\n    });\n\t},\n\n  editTaag: function(req, res){\n    var taag = null;\n    Taag.findOne({Code:req.params.code},function(err, item) \n    {\n      taag = item;\n    });\n    res.render('editTaag', { title: 'Create/Edit a Taag', item: taag });\n    //res.write('test response');\n    //res.end();\n  },\n\n  getCode: function(req, res){\n    var code = new Code().create();\n    res.writeHead(200, {\"Content-Type\": \"application/json\"});\n    res.write(JSON.stringify({ code:code }));\n    res.end();\n  },\n\n  addIssue: function(req,res){\n    console.log(\"Hello\");\n    Taag.findOne({code:req.body.code},function(err,returnedTaag){\n      console.log(req.body.issueTitle);\n      if(err){\n        res.writeHead(500,err.message);\n        res.end();\n      }else{\n        if(returnedTaag){\n          var newIssue = new Issue();\n          newIssue.title = req.body.issueTitle;\n          newIssue.description = req.body.description;\n          returnedTaag.issues.push(newIssue);\n          returnedTaag.save(function(err){\n            if(err){\n              res.writeHead(500,'No taag found for that code');\n              res.end();\n            }else{\n              res.writeHead(200, { 'Content-Type': 'application/json' });\n              res.write(JSON.stringify({isSuccessful:true}));\n              res.end();\n            }\n          });\n        }else{\n          res.writeHead(500,'No taag found for that code');\n          res.end();\n        }\n      }\n    });\n  }\n}"]],"start1":0,"start2":0,"length1":0,"length2":5090}]],"length":5090}
{"contributors":[],"silentsave":false,"ts":1370898494109,"patch":[[{"diffs":[[0,"nnection"],[1,"String"],[0,"){\n\tmong"]],"start1":210,"start2":210,"length1":16,"length2":22},{"diffs":[[0,"nnection"],[1,"String"],[0,");\n}\n\nTa"]],"start1":244,"start2":244,"length1":16,"length2":22}]],"length":5102,"saved":false}
{"ts":1370898862724,"patch":[[{"diffs":[[1,"//"],[0,"var Issue = "]],"start1":0,"start2":0,"length1":12,"length2":14},{"diffs":[[0,"issue.js');\n"],[1,"//"],[0,"var Media = "]],"start1":33,"start2":33,"length1":24,"length2":26},{"diffs":[[0,"media.js');\n"],[1,"//"],[0,"var Taag = r"]],"start1":78,"start2":78,"length1":24,"length2":26}]],"length":5108,"saved":false}
{"ts":1370899039132,"patch":[[{"diffs":[[0,"oose');\n"],[1,"Issue = mongoose.model('Issue');\nMedia = mongoose.model('Media');\nTaag = mongoose.model('Taag');\n\n"],[0,"module.e"]],"start1":158,"start2":158,"length1":16,"length2":114}]],"length":5206,"saved":false}
{"contributors":[],"silentsave":false,"ts":1370899074196,"patch":[[{"diffs":[[0,"ar mongo"],[1,"ose"],[0," = requi"]],"start1":134,"start2":134,"length1":16,"length2":19},{"diffs":[[0,"oose');\n"],[1,"var "],[0,"Issue = "]],"start1":161,"start2":161,"length1":16,"length2":20},{"diffs":[[0,"ssue');\n"],[1,"var "],[0,"Media = "]],"start1":198,"start2":198,"length1":16,"length2":20},{"diffs":[[0,"edia');\n"],[1,"var "],[0,"Taag = m"]],"start1":235,"start2":235,"length1":16,"length2":20},{"diffs":[[0,"tring){\n"],[-1,""],[0,"\t"],[1,"//"],[0,"mongo.co"]],"start1":338,"start2":338,"length1":17,"length2":19}]],"length":5223,"saved":false}
{"ts":1370899085333,"patch":[[{"diffs":[[0,"s){\n    "],[-1,"\t"],[1,"    "],[0,"Taag.fin"]],"start1":437,"start2":437,"length1":17,"length2":20}]],"length":5226,"saved":false}
{"ts":1370899144723,"patch":[[{"diffs":[[0,"/taag.js');\n"],[1,"var Code = reqire('../domain/code.js');\n"],[0,"var mongoose"]],"start1":121,"start2":121,"length1":24,"length2":64}]],"length":5266,"saved":false}
{"ts":1370899148868,"patch":[[{"diffs":[[0,"de = req"],[1,"u"],[0,"ire('../"]],"start1":139,"start2":139,"length1":16,"length2":17}]],"length":5267,"saved":false}
{"ts":1370899289824,"patch":[[{"diffs":[[0,"ain/code"],[1,"s"],[0,".js');\nv"]],"start1":159,"start2":159,"length1":16,"length2":17}]],"length":5268,"saved":false}
{"ts":1370899347414,"patch":[[{"diffs":[[-1,"//var Issue = require('../models/issue.js');\n//var Media = require('../models/media.js');\n//var Taag = require('../models/taag.js');\n"],[0,"var "]],"start1":0,"start2":0,"length1":137,"length2":4}]],"length":5135,"saved":false}
{"ts":1370899350951,"patch":[[{"diffs":[[0,"codes.js');\n"],[1,"\n"],[0,"var mongoose"]],"start1":30,"start2":30,"length1":24,"length2":25}]],"length":5136,"saved":false}
{"ts":1370899354345,"patch":[[{"diffs":[[0,"g){\n"],[-1,"\t//mongo.connect(connectionString);\n"],[0,"}\n\nT"]],"start1":252,"start2":252,"length1":44,"length2":8}]],"length":5100,"saved":false}
{"ts":1370899356012,"patch":[[{"diffs":[[0,"ute("],[-1,"connectionString"],[0,"){\n}"]],"start1":233,"start2":233,"length1":24,"length2":8}]],"length":5084,"saved":false}
{"ts":1370899360417,"patch":[[{"diffs":[[0,"e;\n\n"],[-1,"function TaagRoute(){\n}\n\n"],[0,"Taag"]],"start1":214,"start2":214,"length1":33,"length2":8}]],"length":5059,"saved":false}
{"ts":1370899367954,"patch":[[{"diffs":[[0,"Route;\n\n"],[1,"function TaagRoute(){\n}\n\n"],[0,"TaagRout"]],"start1":210,"start2":210,"length1":16,"length2":41}]],"length":5084,"saved":false}
